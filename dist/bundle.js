(()=>{let e=[];const t=document.querySelector(".main-container");function n(){localStorage.setItem("myLibrary",JSON.stringify(e)),console.log("populated storage"),console.log(localStorage.getItem("myLibrary"))}function d(){localStorage.clear()}localStorage.getItem("myLibrary")?function(){let t=localStorage.getItem("myLibrary"),n=JSON.parse(t);e=n}():n();class a{constructor(e,t,n,d){this.title=e,this.author=t,this.pages=n,this.read=d}}function i(){e.forEach((a=>{const o=document.createElement("div");o.classList.add("card");const l=e.indexOf(a);o.setAttribute("data-index",l);const r=document.createElement("button");r.textContent="X",r.classList="deleteButton",r.addEventListener("click",(()=>{!function(t){e.splice(t,1)}(l),c(),i(),d(),n()}));const s=document.createElement("div"),u=document.createElement("div"),p=document.createElement("div"),m=document.createElement("input"),h=document.createElement("label");s.classList.add("title"),m.classList.add("isRead"),h.setAttribute("for","isRead"),m.setAttribute("type","checkbox"),a.read?(m.checked=!0,console.log(a.read)):m.checked=!1,m.id="isRead",m.onchange=function(){a.read=m.checked,d(),n()},s.textContent=a.title,u.textContent="by "+a.author,p.textContent=a.pages+" pages",h.textContent="Have you read this?",o.appendChild(s),o.appendChild(u),o.appendChild(p),o.appendChild(h),o.appendChild(m),o.appendChild(r),t.appendChild(o)}))}function c(){for(;t.firstChild;)t.removeChild(t.firstChild)}i(),document.getElementById("addButton").addEventListener("click",(()=>{!function(){if(null===document.getElementById("pop-up")){const o=document.createElement("form");o.classList.add("pop-up"),o.id="pop-up";const l=document.createElement("input"),r=document.createElement("label");r.setAttribute("for","title"),r.textContent="Title:",l.id="title",l.required=!0,o.appendChild(r),o.appendChild(l),l.addEventListener("input",(()=>{l.checkValidity()?l.setCustomValidity(""):l.setCustomValidity("Please include a title of at least one (1) character in length.")}));const s=document.createElement("input"),u=document.createElement("label");u.setAttribute("for","author"),u.textContent="Author:",s.id="author",s.required=!0,o.appendChild(u),o.appendChild(s);const p=document.createElement("input"),m=document.createElement("label");m.setAttribute("for","pages"),m.textContent="Pages:",p.id="pages",p.required=!0,o.appendChild(m),o.appendChild(p);const h=document.createElement("input"),C=document.createElement("label");C.setAttribute("for","read"),C.textContent="Have you read it?",h.id="read",h.classList.add("isRead"),h.type="checkbox",o.appendChild(C),o.appendChild(h);const E=document.createElement("button");E.id="submit",E.classList.add("popUpButton"),E.textContent="Submit",E.addEventListener("click",(()=>{var t,o,r,u;l.checkValidity()&&(t=l.value,o=s.value,r=p.value,u=h.checked,e.push(new a(t,o,r,u)),d(),n(),c(),i())})),o.appendChild(E);const b=document.createElement("button");b.id="cancel",b.classList.add("popUpButton"),b.textContent="Cancel",b.addEventListener("click",(()=>{o.remove()})),o.appendChild(b),t.appendChild(o)}}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,